@model Forum.Domain.Queries.DTOs.PostDetailsDTO

@{
	ViewData["Title"] = Model.Title;
}

<div class="container mt-4">
	<div class="card shadow-sm mb-4">
		<div class="card-body">
			<h3 class="card-title">@Model.Title</h3>
			<p class="text-muted">
				<strong>@Model.Author</strong>• @Model.CreationDate.ToString("g")
			</p>
			<p class="card-text">@Model.Content</p>
		</div>
	</div>

	<div class="mb-3">
		<h5>@Model.Answers.Count Answer(s)</h5>
	</div>

	<div class="list-group mb-4">
		@foreach (var answer in Model.Answers)
		{
			<div class="list-group-item">
				<div class="d-flex justify-content-between mb-1">
					<small class="text-muted">
						<strong>@answer.Author</strong> replied on @answer.CreationDate.ToString("g");
					</small>
				</div>

				<p>@answer.Content</p>
			</div>
		}
	</div>

	@if (User.Identity.IsAuthenticated)
	{
		<button class="btn btn-outline-secondary" onclick="toggleAnswerForm()">Odpowiedz</button>

		<div id="answerContainer" class="mt-3" style="display: none;">
			@await Html.PartialAsync("_AnswerFormPartial", new Forum.Domain.Queries.DTOs.AnswerDTO() { PostId = Model.Id })
		</div>
	}
</div>